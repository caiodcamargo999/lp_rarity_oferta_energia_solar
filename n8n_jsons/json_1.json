{
  "name": "GHL Cold Call - ElevenLabs Orchestration",
  "nodes": [
    {
      "parameters": {
        "path": "start-call",
        "httpMethod": "POST",
        "responseMode": "onReceived",
        "responseData": "successMessage",
        "responseMessage": "Job received"
      },
      "name": "Webhook Start",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            { "name": "leadId", "value": "={{$json[\"leadId\"] || $json[\"id\"]}}" },
            { "name": "toNumber", "value": "={{$json[\"phone\"] || $json[\"toNumber\"]}}" },
            { "name": "fromNumber", "value": "={{$env.GHL_DEFAULT_FROM || 'REPLACE_FROM_NUMBER'}}" },
            { "name": "script", "value": "Olá, aqui é da Empresa X. Estou ligando para falar sobre uma oportunidade. Posso continuar?" }
          ]
        }
      },
      "name": "Set Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [500, 200]
    },
    {
      "parameters": {
        "url": "https://api.elevenlabs.io/v1/text-to-speech/Rarity",
        "options": { "bodyContentType": "json" },
        "bodyParametersJson": "={\n  \"text\": $json[\"script\"],\n  \"voice\": \"Rarity\",\n  \"format\": \"wav\"\n}",
        "responseFormat": "file",
        "binaryPropertyName": "audio"
      },
      "name": "ElevenLabs TTS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [750, 200],
      "credentials": { "httpHeaderAuth": { "id": "ElevenLabs Api Key", "name": "elevenlabs_api" } }
    },
    {
      "parameters": {
        "command": "=ffmpeg -y -i {{$binaryData['audio'].fileName}} -ar 16000 -ac 1 -c:a pcm_s16le /tmp/normalized_audio_{{$now}}.wav",
        "options": {}
      },
      "name": "ffmpeg Normalize",
      "type": "n8n-nodes-base.exec",
      "typeVersion": 1,
      "position": [1000, 200]
    },
    {
      "parameters": {
        "operation": "upload",
        "binaryPropertyName": "file",
        "bucketName": "={{$env.S3_BUCKET}}",
        "fileName": "={{'call_audio_'+$json['leadId']+'_'+$now+'.wav'}}",
        "additionalFields": {}
      },
      "name": "S3 Upload",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [1250, 200],
      "credentials": { "s3": { "id": "S3 Creds", "name": "s3_cred" } }
    },
    {
      "parameters": {
        "url": "={{$env.GHL_API_BASE + '/phone/call'}}",
        "options": { "bodyContentType": "json" },
        "bodyParametersJson": "={\n  \"fromNumber\": $json[\"fromNumber\"],\n  \"toNumber\": $json[\"toNumber\"],\n  \"playAudioUrl\": $json[\"s3Url\"],\n  \"metadata\": { \"leadId\": $json[\"leadId\"] }\n}",
        "responseFormat": "json",
        "throwOnFailStatusCode": true
      },
      "name": "GHL Initiate Call",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1500, 200],
      "credentials": { "httpHeaderAuth": { "id": "GHL Api Key", "name": "ghl_api" } }
    },
    {
      "parameters": {
        "path": "ghl/callback",
        "httpMethod": "POST",
        "responseMode": "onReceived",
        "responseData": "successMessage",
        "responseMessage": "Callback received"
      },
      "name": "Webhook GHL Callback",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 550]
    },
    {
      "parameters": {
        "functionCode": "const payload = items[0].json;\n// Expects payload.recordingUrl and metadata.leadId\nreturn [{ json: payload }];"
      },
      "name": "Parse Callback",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [500, 550]
    },
    {
      "parameters": {
        "url": "={{$json[\"recordingUrl\"]}}",
        "responseFormat": "file",
        "binaryPropertyName": "recording"
      },
      "name": "Download Recording",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [750, 550]
    },
    {
      "parameters": {
        "command": "=ffmpeg -y -i {{$binaryData['recording'].fileName}} -ar 16000 -ac 1 -c:a pcm_s16le /tmp/recording_normalized_{{$now}}.wav",
        "options": {}
      },
      "name": "ffmpeg Normalize Recording",
      "type": "n8n-nodes-base.exec",
      "typeVersion": 1,
      "position": [1000, 550]
    },
    {
      "parameters": {
        "operation": "upload",
        "binaryPropertyName": "file",
        "bucketName": "={{$env.S3_BUCKET}}",
        "fileName": "={{'recording_'+$json['metadata']['leadId']+'_'+$now+'.wav'}}",
        "additionalFields": {}
      },
      "name": "S3 Upload Recording",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [1250, 550],
      "credentials": { "s3": { "id": "S3 Creds", "name": "s3_cred" } }
    },
    {
      "parameters": {
        "url": "={{$env.GHL_API_BASE + '/leads/' + $json['metadata']['leadId']}}",
        "options": { "bodyContentType": "json" },
        "bodyParametersJson": "={\n  \"callStatus\": $json[\"status\"],\n  \"recordingUrl\": $json[\"s3Url\"],\n  \"notes\": \"Call processed by automation\"\n}",
        "responseFormat": "json",
        "httpMethod": "PATCH",
        "throwOnFailStatusCode": true
      },
      "name": "Update GHL Lead",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1500, 550],
      "credentials": { "httpHeaderAuth": { "id": "GHL Api Key", "name": "ghl_api" } }
    }
  ],
  "connections": {
    "Webhook Start": { "main": [[{ "node": "Set Payload", "type": "main", "index": 0 }]] },
    "Set Payload": { "main": [[{ "node": "ElevenLabs TTS", "type": "main", "index": 0 }]] },
    "ElevenLabs TTS": { "main": [[{ "node": "ffmpeg Normalize", "type": "main", "index": 0 }]] },
    "ffmpeg Normalize": { "main": [[{ "node": "S3 Upload", "type": "main", "index": 0 }]] },
    "S3 Upload": { "main": [[{ "node": "GHL Initiate Call", "type": "main", "index": 0 }]] },
    "Webhook GHL Callback": { "main": [[{ "node": "Parse Callback", "type": "main", "index": 0 }]] },
    "Parse Callback": { "main": [[{ "node": "Download Recording", "type": "main", "index": 0 }]] },
    "Download Recording": { "main": [[{ "node": "ffmpeg Normalize Recording", "type": "main", "index": 0 }]] },
    "ffmpeg Normalize Recording": { "main": [[{ "node": "S3 Upload Recording", "type": "main", "index": 0 }]] },
    "S3 Upload Recording": { "main": [[{ "node": "Update GHL Lead", "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": {}
}
